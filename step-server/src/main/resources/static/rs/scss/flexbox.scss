@import 'mixin';

// 创建 Flex 文档流
.flex {
  @include display( flex );
}

// 主轴为水平方向 起点在左侧
.hNormal {
  @include direction( row )
}

// 主轴为水平方向 起点在右侧
.hReverse {
  @include direction( row-reverse )
}

// 主轴为垂直方向 起点在顶部
.vNormal {
  @include direction( column )
}

// 主轴为垂直方向 起点在底部
.vReverse {
  @include direction( column-reverse )
}

// 水平垂直居中 在一根轴线上
.horizontal {
  @include align-items( center )
  @include justify-content( center )
}

// 左对齐 在一根轴线上
.left {
  @include justify-content( flex-start )
}

// 右对齐 在一根轴线上
.right {
  @include justify-content( flex-end )
}

// 水平居中 在一根轴线上
.hCenter {
  @include align-items( center )
}

// 左右两端对齐 元素和边框之间没有间隔 元素之间的间隔都相等 在一根轴线上
.between {
  @include justify-content( space-between )
}

// 左右两端对齐 但元素和边框之间留有间隔 元素间的间隔是元素和边框间隔的两倍 在一根轴线上
.around {
  @include justify-content( space-around )
}

// 从父元素继承该属性
.h-inherit {
  @include justify-content( inherit )
}

// 顶部对齐 在一根轴线上
.top {
  @include align-items( flex-start )
}

// 底部对齐 在一根轴线上
.bottom {
  @include align-items( flex-end )
}

// 垂直居中 元素在一根轴线上
.vCenter {
  @include justify-content( center )
}

// 元素的第一行文字的基线对齐 在一根轴线上
.v-baseline {
  @include align-items( baseline )
}

// 默认值 如果元素 未设置 高度 或 设为 auto ,将占满整个容器的高度
.v-stretch {
  @include align-items( stretch )
}

// 水平垂直居中
.center {
  @include justify-content( center )
  @include align-items( center )
}
